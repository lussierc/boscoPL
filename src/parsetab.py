
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULTDIVAND ASSIGN BAR BONE BOOL BREAK COLON COMMA DIG DIV DOUBLE ELSE EQUALS FETCHINT FETCHLINE GREATER GREATEREQ ID IF INT LESS LESSEQ LPAREN MINUS MULT NEQUALS NOT NULL OR PLUS REM RETURN RPAREN SPEAK STRING WOOFProgram : DeclDecl : WoofDecl\n            | BoneDecl\n            | VarDecl\n            | R_DeclR_Decl : Decl R_Decl\n              | EmptyWoofDecl : WOOF ID COLON Field COLONBoneDecl : BONE ID MINUS Field StmtBlockVar : Type IDVarDecl : Var BAR\n               | R_VarDeclR_VarDecl : VarDecl R_VarDecl\n                 | EmptyStmtBlock : COLON R_VarDecl R_Stmt COLONStmt : R_Expr BAR\n            | IfStmt\n            | DigStmt\n            | BreakStmt\n            | ReturnStmt\n            | SpeakStmt\n            | StmtBlockR_Stmt : Stmt R_Stmt\n              | EmptyField : BoneDecl\n             | VarDecl\n             | R_FieldR_Field : Field R_Field\n               | EmptySpeakStmt : SPEAK RPAREN R_Expr LPAREN BARIfStmt : IF MINUS Expr COLON Stmt\n              | IF MINUS Expr COLON Stmt ELSE COLON StmtReturnStmt : RETURN R_Expr BARBreakStmt : BREAK BARDigStmt : DIG MINUS Type ID Expr BAR Expr BAR Expr COLON StmtExpr : Expr PLUS Expr\n            | Expr MINUS Expr\n            | Expr MULT Expr\n            | Expr DIV Expr\n            | Expr REM Expr\n            | MINUS ExprExpr : Expr LESS Expr\n            | Expr LESSEQ Expr\n            | Expr GREATER Expr\n            | Expr GREATEREQ Expr\n            | Expr EQUALS Expr\n            | Expr NEQUALS Expr\n            | Expr AND Expr\n            | Expr OR Expr\n            | NOT ExprExpr : LValue ASSIGN Expr\n            | RPAREN Expr LPAREN\n            | FETCHINT MINUS BAR\n            | FETCHLINE MINUS BAR\n            | ConstantR_Expr : Expr R_Expr\n              | COMMA Expr R_Expr\n              | EmptyLValue : IDConstant : INT\n                | DOUBLE\n                | BOOL\n                | STRING\n                | NULLType : INT\n            | DOUBLE\n            | BOOL\n            | STRING\n            | IDEmpty :'
    
_lr_action_items = {'WOOF':([0,2,3,4,5,6,11,12,18,19,20,21,22,25,35,38,71,],[7,7,-2,-3,-4,-5,-12,-7,7,-5,-70,-12,-14,-11,-8,-9,-15,]),'BONE':([0,2,3,4,5,6,11,12,18,19,20,21,22,25,27,28,29,30,31,32,33,34,35,36,37,38,71,],[9,9,-2,-3,-4,-5,-12,-7,9,-5,-70,-12,-14,-11,9,9,9,-25,-26,-27,-14,9,-8,9,-27,-9,-15,]),'INT':([0,2,3,4,5,6,11,12,18,19,20,21,22,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,45,46,47,48,49,50,51,52,54,58,60,61,65,66,67,68,69,70,71,73,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,95,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,116,118,120,121,122,123,124,125,126,128,130,132,133,135,136,138,139,],[14,14,-2,-3,14,-5,-12,-7,14,-5,14,-12,-14,-11,14,14,14,-25,14,-27,-14,14,-8,14,-27,-9,14,66,66,-17,-18,-19,-20,-21,-22,66,66,66,66,66,66,-55,-60,-61,-62,-63,-64,-15,-16,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-41,14,-34,66,-50,66,-36,-37,-38,-39,-40,-42,-43,-44,-45,-46,-47,-48,-49,66,-33,-52,-51,-53,-54,66,-37,66,-31,-30,66,66,-32,66,66,-35,]),'DOUBLE':([0,2,3,4,5,6,11,12,18,19,20,21,22,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,45,46,47,48,49,50,51,52,54,58,60,61,65,66,67,68,69,70,71,73,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,95,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,116,118,120,121,122,123,124,125,126,128,130,132,133,135,136,138,139,],[15,15,-2,-3,15,-5,-12,-7,15,-5,15,-12,-14,-11,15,15,15,-25,15,-27,-14,15,-8,15,-27,-9,15,67,67,-17,-18,-19,-20,-21,-22,67,67,67,67,67,67,-55,-60,-61,-62,-63,-64,-15,-16,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-41,15,-34,67,-50,67,-36,-37,-38,-39,-40,-42,-43,-44,-45,-46,-47,-48,-49,67,-33,-52,-51,-53,-54,67,-37,67,-31,-30,67,67,-32,67,67,-35,]),'BOOL':([0,2,3,4,5,6,11,12,18,19,20,21,22,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,45,46,47,48,49,50,51,52,54,58,60,61,65,66,67,68,69,70,71,73,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,95,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,116,118,120,121,122,123,124,125,126,128,130,132,133,135,136,138,139,],[16,16,-2,-3,16,-5,-12,-7,16,-5,16,-12,-14,-11,16,16,16,-25,16,-27,-14,16,-8,16,-27,-9,16,68,68,-17,-18,-19,-20,-21,-22,68,68,68,68,68,68,-55,-60,-61,-62,-63,-64,-15,-16,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-41,16,-34,68,-50,68,-36,-37,-38,-39,-40,-42,-43,-44,-45,-46,-47,-48,-49,68,-33,-52,-51,-53,-54,68,-37,68,-31,-30,68,68,-32,68,68,-35,]),'STRING':([0,2,3,4,5,6,11,12,18,19,20,21,22,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,45,46,47,48,49,50,51,52,54,58,60,61,65,66,67,68,69,70,71,73,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,95,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,116,118,120,121,122,123,124,125,126,128,130,132,133,135,136,138,139,],[17,17,-2,-3,17,-5,-12,-7,17,-5,17,-12,-14,-11,17,17,17,-25,17,-27,-14,17,-8,17,-27,-9,17,69,69,-17,-18,-19,-20,-21,-22,69,69,69,69,69,69,-55,-60,-61,-62,-63,-64,-15,-16,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,-41,17,-34,69,-50,69,-36,-37,-38,-39,-40,-42,-43,-44,-45,-46,-47,-48,-49,69,-33,-52,-51,-53,-54,69,-37,69,-31,-30,69,69,-32,69,69,-35,]),'ID':([0,2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,45,46,47,48,49,50,51,52,54,58,60,61,65,66,67,68,69,70,71,73,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,95,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,116,117,118,120,121,122,123,124,125,126,128,130,132,133,135,136,138,139,],[8,8,-2,-3,8,-5,23,-69,24,-12,-7,26,-65,-66,-67,-68,8,-5,8,-12,-14,-11,8,8,8,-25,8,-27,-14,8,-8,8,-27,-9,8,56,56,-17,-18,-19,-20,-21,-22,56,56,56,56,56,56,-55,-60,-61,-62,-63,-64,-15,-16,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-41,8,-34,56,-50,56,-36,-37,-38,-39,-40,-42,-43,-44,-45,-46,-47,-48,-49,56,126,-33,-52,-51,-53,-54,56,-37,56,-31,-30,56,56,-32,56,56,-35,]),'$end':([0,1,2,3,4,5,6,11,12,18,19,20,21,22,25,35,38,71,],[-70,0,-1,-2,-3,-4,-5,-12,-7,-70,-5,-70,-12,-14,-11,-8,-9,-15,]),'BAR':([10,20,21,22,25,26,39,40,42,43,44,45,46,47,48,49,50,51,57,58,65,66,67,68,69,70,71,73,74,88,89,91,93,94,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,118,120,121,122,123,124,125,127,128,129,130,133,134,135,138,139,],[25,-70,-12,-14,-11,-10,-70,-12,-70,-58,73,-17,-18,-19,-20,-21,-22,-70,93,-70,-55,-60,-61,-62,-63,-64,-15,-16,-56,-58,-70,-41,-34,118,-50,122,123,-36,-37,-38,-39,-40,-42,-43,-44,-45,-46,-47,-48,-49,-57,-33,-52,-51,-53,-54,-70,-37,130,-31,132,-30,-70,136,-32,-70,-35,]),'COLON':([11,20,21,22,23,25,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,45,46,47,48,49,50,65,66,67,68,69,70,71,72,73,91,93,97,101,103,104,105,106,107,108,109,110,111,112,113,115,118,120,121,122,123,124,125,128,130,131,133,135,137,138,139,],[-12,-70,-12,-14,27,-11,-70,-70,35,-25,-26,-27,-14,39,-70,-27,-9,-70,39,71,39,-24,-17,-18,-19,-20,-21,-22,-55,-60,-61,-62,-63,-64,-15,-23,-16,-41,-34,-50,-36,-38,-39,-40,-42,-43,-44,-45,-46,-47,-48,-49,124,-33,-52,-51,-53,-54,39,-37,-31,-30,133,39,-32,138,39,-35,]),'COMMA':([20,21,22,25,39,40,42,45,46,47,48,49,50,51,58,65,66,67,68,69,70,71,73,89,91,93,95,97,101,102,103,104,105,106,107,108,109,110,111,112,113,118,120,121,122,123,124,125,128,130,133,135,138,139,],[-70,-12,-14,-11,-70,52,52,-17,-18,-19,-20,-21,-22,52,52,-55,-60,-61,-62,-63,-64,-15,-16,52,-41,-34,52,-50,-36,-37,-38,-39,-40,-42,-43,-44,-45,-46,-47,-48,-49,-33,-52,-51,-53,-54,52,-37,-31,-30,52,-32,52,-35,]),'IF':([20,21,22,25,39,40,42,45,46,47,48,49,50,71,73,93,118,124,128,130,133,135,138,139,],[-70,-12,-14,-11,-70,53,53,-17,-18,-19,-20,-21,-22,-15,-16,-34,-33,53,-31,-30,53,-32,53,-35,]),'DIG':([20,21,22,25,39,40,42,45,46,47,48,49,50,71,73,93,118,124,128,130,133,135,138,139,],[-70,-12,-14,-11,-70,55,55,-17,-18,-19,-20,-21,-22,-15,-16,-34,-33,55,-31,-30,55,-32,55,-35,]),'BREAK':([20,21,22,25,39,40,42,45,46,47,48,49,50,71,73,93,118,124,128,130,133,135,138,139,],[-70,-12,-14,-11,-70,57,57,-17,-18,-19,-20,-21,-22,-15,-16,-34,-33,57,-31,-30,57,-32,57,-35,]),'RETURN':([20,21,22,25,39,40,42,45,46,47,48,49,50,71,73,93,118,124,128,130,133,135,138,139,],[-70,-12,-14,-11,-70,58,58,-17,-18,-19,-20,-21,-22,-15,-16,-34,-33,58,-31,-30,58,-32,58,-35,]),'SPEAK':([20,21,22,25,39,40,42,45,46,47,48,49,50,71,73,93,118,124,128,130,133,135,138,139,],[-70,-12,-14,-11,-70,59,59,-17,-18,-19,-20,-21,-22,-15,-16,-34,-33,59,-31,-30,59,-32,59,-35,]),'MINUS':([20,21,22,24,25,39,40,42,45,46,47,48,49,50,51,52,53,54,55,58,60,61,63,64,65,66,67,68,69,70,71,73,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,93,95,96,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,115,116,118,120,121,122,123,124,125,126,128,129,130,132,133,134,135,136,137,138,139,],[-70,-12,-14,28,-11,-70,54,54,-17,-18,-19,-20,-21,-22,76,54,90,54,92,54,54,54,99,100,-55,-60,-61,-62,-63,-64,-15,-16,54,54,54,54,54,54,54,54,54,54,54,54,54,76,54,-41,-34,54,116,116,54,-36,-37,-38,-39,116,116,116,116,116,116,116,116,116,116,54,-33,-52,116,-53,-54,54,-37,54,-31,116,-30,54,54,116,-32,54,116,54,-35,]),'NOT':([20,21,22,25,39,40,42,45,46,47,48,49,50,51,52,54,58,60,61,65,66,67,68,69,70,71,73,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,93,95,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,116,118,120,121,122,123,124,125,126,128,130,132,133,135,136,138,139,],[-70,-12,-14,-11,-70,61,61,-17,-18,-19,-20,-21,-22,61,61,61,61,61,61,-55,-60,-61,-62,-63,-64,-15,-16,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-41,-34,61,-50,61,-36,-37,-38,-39,-40,-42,-43,-44,-45,-46,-47,-48,-49,61,-33,-52,-51,-53,-54,61,-37,61,-31,-30,61,61,-32,61,61,-35,]),'RPAREN':([20,21,22,25,39,40,42,45,46,47,48,49,50,51,52,54,58,59,60,61,65,66,67,68,69,70,71,73,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,93,95,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,116,118,120,121,122,123,124,125,126,128,130,132,133,135,136,138,139,],[-70,-12,-14,-11,-70,60,60,-17,-18,-19,-20,-21,-22,60,60,60,60,95,60,60,-55,-60,-61,-62,-63,-64,-15,-16,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-41,-34,60,-50,60,-36,-37,-38,-39,-40,-42,-43,-44,-45,-46,-47,-48,-49,60,-33,-52,-51,-53,-54,60,-37,60,-31,-30,60,60,-32,60,60,-35,]),'FETCHINT':([20,21,22,25,39,40,42,45,46,47,48,49,50,51,52,54,58,60,61,65,66,67,68,69,70,71,73,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,93,95,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,116,118,120,121,122,123,124,125,126,128,130,132,133,135,136,138,139,],[-70,-12,-14,-11,-70,63,63,-17,-18,-19,-20,-21,-22,63,63,63,63,63,63,-55,-60,-61,-62,-63,-64,-15,-16,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-41,-34,63,-50,63,-36,-37,-38,-39,-40,-42,-43,-44,-45,-46,-47,-48,-49,63,-33,-52,-51,-53,-54,63,-37,63,-31,-30,63,63,-32,63,63,-35,]),'FETCHLINE':([20,21,22,25,39,40,42,45,46,47,48,49,50,51,52,54,58,60,61,65,66,67,68,69,70,71,73,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,93,95,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,116,118,120,121,122,123,124,125,126,128,130,132,133,135,136,138,139,],[-70,-12,-14,-11,-70,64,64,-17,-18,-19,-20,-21,-22,64,64,64,64,64,64,-55,-60,-61,-62,-63,-64,-15,-16,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-41,-34,64,-50,64,-36,-37,-38,-39,-40,-42,-43,-44,-45,-46,-47,-48,-49,64,-33,-52,-51,-53,-54,64,-37,64,-31,-30,64,64,-32,64,64,-35,]),'NULL':([20,21,22,25,39,40,42,45,46,47,48,49,50,51,52,54,58,60,61,65,66,67,68,69,70,71,73,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,93,95,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,116,118,120,121,122,123,124,125,126,128,130,132,133,135,136,138,139,],[-70,-12,-14,-11,-70,70,70,-17,-18,-19,-20,-21,-22,70,70,70,70,70,70,-55,-60,-61,-62,-63,-64,-15,-16,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,-41,-34,70,-50,70,-36,-37,-38,-39,-40,-42,-43,-44,-45,-46,-47,-48,-49,70,-33,-52,-51,-53,-54,70,-37,70,-31,-30,70,70,-32,70,70,-35,]),'ELSE':([45,46,47,48,49,50,71,73,93,118,128,130,135,139,],[-17,-18,-19,-20,-21,-22,-15,-16,-34,-33,131,-30,-32,-35,]),'PLUS':([51,65,66,67,68,69,70,89,91,96,97,101,102,103,104,105,106,107,108,109,110,111,112,113,115,120,121,122,123,125,129,134,137,],[75,-55,-60,-61,-62,-63,-64,75,-41,75,75,-36,-37,-38,-39,75,75,75,75,75,75,75,75,75,75,-52,75,-53,-54,-37,75,75,75,]),'MULT':([51,65,66,67,68,69,70,89,91,96,97,101,102,103,104,105,106,107,108,109,110,111,112,113,115,120,121,122,123,125,129,134,137,],[77,-55,-60,-61,-62,-63,-64,77,77,77,77,77,77,-38,-39,77,77,77,77,77,77,77,77,77,77,-52,77,-53,-54,77,77,77,77,]),'DIV':([51,65,66,67,68,69,70,89,91,96,97,101,102,103,104,105,106,107,108,109,110,111,112,113,115,120,121,122,123,125,129,134,137,],[78,-55,-60,-61,-62,-63,-64,78,78,78,78,78,78,-38,-39,78,78,78,78,78,78,78,78,78,78,-52,78,-53,-54,78,78,78,78,]),'REM':([51,65,66,67,68,69,70,89,91,96,97,101,102,103,104,105,106,107,108,109,110,111,112,113,115,120,121,122,123,125,129,134,137,],[79,-55,-60,-61,-62,-63,-64,79,-41,79,79,-36,-37,-38,-39,79,79,79,79,79,79,79,79,79,79,-52,79,-53,-54,-37,79,79,79,]),'LESS':([51,65,66,67,68,69,70,89,91,96,97,101,102,103,104,105,106,107,108,109,110,111,112,113,115,120,121,122,123,125,129,134,137,],[80,-55,-60,-61,-62,-63,-64,80,-41,80,80,-36,-37,-38,-39,80,80,80,80,80,80,80,80,80,80,-52,80,-53,-54,-37,80,80,80,]),'LESSEQ':([51,65,66,67,68,69,70,89,91,96,97,101,102,103,104,105,106,107,108,109,110,111,112,113,115,120,121,122,123,125,129,134,137,],[81,-55,-60,-61,-62,-63,-64,81,-41,81,81,-36,-37,-38,-39,81,81,81,81,81,81,81,81,81,81,-52,81,-53,-54,-37,81,81,81,]),'GREATER':([51,65,66,67,68,69,70,89,91,96,97,101,102,103,104,105,106,107,108,109,110,111,112,113,115,120,121,122,123,125,129,134,137,],[82,-55,-60,-61,-62,-63,-64,82,-41,82,82,-36,-37,-38,-39,82,82,82,82,82,82,82,82,82,82,-52,82,-53,-54,-37,82,82,82,]),'GREATEREQ':([51,65,66,67,68,69,70,89,91,96,97,101,102,103,104,105,106,107,108,109,110,111,112,113,115,120,121,122,123,125,129,134,137,],[83,-55,-60,-61,-62,-63,-64,83,-41,83,83,-36,-37,-38,-39,83,83,83,83,83,83,83,83,83,83,-52,83,-53,-54,-37,83,83,83,]),'EQUALS':([51,65,66,67,68,69,70,89,91,96,97,101,102,103,104,105,106,107,108,109,110,111,112,113,115,120,121,122,123,125,129,134,137,],[84,-55,-60,-61,-62,-63,-64,84,-41,84,84,-36,-37,-38,-39,84,84,84,84,84,84,84,84,84,84,-52,84,-53,-54,-37,84,84,84,]),'NEQUALS':([51,65,66,67,68,69,70,89,91,96,97,101,102,103,104,105,106,107,108,109,110,111,112,113,115,120,121,122,123,125,129,134,137,],[85,-55,-60,-61,-62,-63,-64,85,-41,85,85,-36,-37,-38,-39,85,85,85,85,85,85,85,85,85,85,-52,85,-53,-54,-37,85,85,85,]),'AND':([51,65,66,67,68,69,70,89,91,96,97,101,102,103,104,105,106,107,108,109,110,111,112,113,115,120,121,122,123,125,129,134,137,],[86,-55,-60,-61,-62,-63,-64,86,-41,86,86,-36,-37,-38,-39,86,86,86,86,86,86,86,86,86,86,-52,86,-53,-54,-37,86,86,86,]),'OR':([51,65,66,67,68,69,70,89,91,96,97,101,102,103,104,105,106,107,108,109,110,111,112,113,115,120,121,122,123,125,129,134,137,],[87,-55,-60,-61,-62,-63,-64,87,-41,87,87,-36,-37,-38,-39,87,87,87,87,87,87,87,87,87,87,-52,87,-53,-54,-37,87,87,87,]),'LPAREN':([51,65,66,67,68,69,70,74,88,89,91,95,96,97,101,102,103,104,105,106,107,108,109,110,111,112,113,114,119,120,121,122,123,125,],[-70,-55,-60,-61,-62,-63,-64,-56,-58,-70,-41,-70,120,-50,-36,-37,-38,-39,-40,-42,-43,-44,-45,-46,-47,-48,-49,-57,127,-52,-51,-53,-54,-37,]),'ASSIGN':([56,62,],[-59,98,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Program':([0,],[1,]),'Decl':([0,2,18,],[2,18,18,]),'WoofDecl':([0,2,18,],[3,3,3,]),'BoneDecl':([0,2,18,27,28,29,34,36,],[4,4,4,30,30,30,30,30,]),'VarDecl':([0,2,5,18,20,27,28,29,31,34,36,39,],[5,5,20,5,20,31,31,31,20,31,31,20,]),'R_Decl':([0,2,18,],[6,19,19,]),'Var':([0,2,5,18,20,27,28,29,31,34,36,39,],[10,10,10,10,10,10,10,10,10,10,10,10,]),'R_VarDecl':([0,2,5,18,20,27,28,29,31,34,36,39,],[11,11,21,11,21,11,11,11,21,11,11,40,]),'Empty':([0,2,5,18,20,27,28,29,31,34,36,39,40,42,51,58,89,95,124,133,138,],[12,12,22,12,22,33,33,33,22,33,33,22,43,43,88,88,88,88,88,88,88,]),'Type':([0,2,5,18,20,27,28,29,31,34,36,39,92,],[13,13,13,13,13,13,13,13,13,13,13,13,117,]),'Field':([27,28,29,34,36,],[29,34,36,36,36,]),'R_Field':([27,28,29,34,36,],[32,32,37,37,37,]),'StmtBlock':([34,40,42,124,133,138,],[38,50,50,50,50,50,]),'R_Stmt':([40,42,],[41,72,]),'Stmt':([40,42,124,133,138,],[42,42,128,135,139,]),'R_Expr':([40,42,51,58,89,95,124,133,138,],[44,44,74,94,114,119,44,44,44,]),'IfStmt':([40,42,124,133,138,],[45,45,45,45,45,]),'DigStmt':([40,42,124,133,138,],[46,46,46,46,46,]),'BreakStmt':([40,42,124,133,138,],[47,47,47,47,47,]),'ReturnStmt':([40,42,124,133,138,],[48,48,48,48,48,]),'SpeakStmt':([40,42,124,133,138,],[49,49,49,49,49,]),'Expr':([40,42,51,52,54,58,60,61,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,95,98,116,124,126,132,133,136,138,],[51,51,51,89,91,51,96,97,101,102,103,104,105,106,107,108,109,110,111,112,113,51,115,51,121,125,51,129,134,51,137,51,]),'LValue':([40,42,51,52,54,58,60,61,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,95,98,116,124,126,132,133,136,138,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'Constant':([40,42,51,52,54,58,60,61,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,95,98,116,124,126,132,133,136,138,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Program","S'",1,None,None,None),
  ('Program -> Decl','Program',1,'p_Program','parse_bosco.py',93),
  ('Decl -> WoofDecl','Decl',1,'p_Decl','parse_bosco.py',96),
  ('Decl -> BoneDecl','Decl',1,'p_Decl','parse_bosco.py',97),
  ('Decl -> VarDecl','Decl',1,'p_Decl','parse_bosco.py',98),
  ('Decl -> R_Decl','Decl',1,'p_Decl','parse_bosco.py',99),
  ('R_Decl -> Decl R_Decl','R_Decl',2,'p_R_Decl','parse_bosco.py',102),
  ('R_Decl -> Empty','R_Decl',1,'p_R_Decl','parse_bosco.py',103),
  ('WoofDecl -> WOOF ID COLON Field COLON','WoofDecl',5,'p_WoofDecl','parse_bosco.py',106),
  ('BoneDecl -> BONE ID MINUS Field StmtBlock','BoneDecl',5,'p_BoneDecl','parse_bosco.py',109),
  ('Var -> Type ID','Var',2,'p_Var','parse_bosco.py',112),
  ('VarDecl -> Var BAR','VarDecl',2,'p_VarDecl','parse_bosco.py',115),
  ('VarDecl -> R_VarDecl','VarDecl',1,'p_VarDecl','parse_bosco.py',116),
  ('R_VarDecl -> VarDecl R_VarDecl','R_VarDecl',2,'p_R_VarDecl','parse_bosco.py',119),
  ('R_VarDecl -> Empty','R_VarDecl',1,'p_R_VarDecl','parse_bosco.py',120),
  ('StmtBlock -> COLON R_VarDecl R_Stmt COLON','StmtBlock',4,'p_StmtBlock','parse_bosco.py',123),
  ('Stmt -> R_Expr BAR','Stmt',2,'p_Stmt','parse_bosco.py',126),
  ('Stmt -> IfStmt','Stmt',1,'p_Stmt','parse_bosco.py',127),
  ('Stmt -> DigStmt','Stmt',1,'p_Stmt','parse_bosco.py',128),
  ('Stmt -> BreakStmt','Stmt',1,'p_Stmt','parse_bosco.py',129),
  ('Stmt -> ReturnStmt','Stmt',1,'p_Stmt','parse_bosco.py',130),
  ('Stmt -> SpeakStmt','Stmt',1,'p_Stmt','parse_bosco.py',131),
  ('Stmt -> StmtBlock','Stmt',1,'p_Stmt','parse_bosco.py',132),
  ('R_Stmt -> Stmt R_Stmt','R_Stmt',2,'p_R_Stmt','parse_bosco.py',135),
  ('R_Stmt -> Empty','R_Stmt',1,'p_R_Stmt','parse_bosco.py',136),
  ('Field -> BoneDecl','Field',1,'p_Field','parse_bosco.py',139),
  ('Field -> VarDecl','Field',1,'p_Field','parse_bosco.py',140),
  ('Field -> R_Field','Field',1,'p_Field','parse_bosco.py',141),
  ('R_Field -> Field R_Field','R_Field',2,'p_R_Field','parse_bosco.py',144),
  ('R_Field -> Empty','R_Field',1,'p_R_Field','parse_bosco.py',145),
  ('SpeakStmt -> SPEAK RPAREN R_Expr LPAREN BAR','SpeakStmt',5,'p_SpeakStmt','parse_bosco.py',148),
  ('IfStmt -> IF MINUS Expr COLON Stmt','IfStmt',5,'p_IfStmt','parse_bosco.py',151),
  ('IfStmt -> IF MINUS Expr COLON Stmt ELSE COLON Stmt','IfStmt',8,'p_IfStmt','parse_bosco.py',152),
  ('ReturnStmt -> RETURN R_Expr BAR','ReturnStmt',3,'p_ReturnStmt','parse_bosco.py',155),
  ('BreakStmt -> BREAK BAR','BreakStmt',2,'p_BreakStmt','parse_bosco.py',158),
  ('DigStmt -> DIG MINUS Type ID Expr BAR Expr BAR Expr COLON Stmt','DigStmt',11,'p_DigStmt','parse_bosco.py',161),
  ('Expr -> Expr PLUS Expr','Expr',3,'p_Expr_Math','parse_bosco.py',164),
  ('Expr -> Expr MINUS Expr','Expr',3,'p_Expr_Math','parse_bosco.py',165),
  ('Expr -> Expr MULT Expr','Expr',3,'p_Expr_Math','parse_bosco.py',166),
  ('Expr -> Expr DIV Expr','Expr',3,'p_Expr_Math','parse_bosco.py',167),
  ('Expr -> Expr REM Expr','Expr',3,'p_Expr_Math','parse_bosco.py',168),
  ('Expr -> MINUS Expr','Expr',2,'p_Expr_Math','parse_bosco.py',169),
  ('Expr -> Expr LESS Expr','Expr',3,'p_Expr_Logic','parse_bosco.py',172),
  ('Expr -> Expr LESSEQ Expr','Expr',3,'p_Expr_Logic','parse_bosco.py',173),
  ('Expr -> Expr GREATER Expr','Expr',3,'p_Expr_Logic','parse_bosco.py',174),
  ('Expr -> Expr GREATEREQ Expr','Expr',3,'p_Expr_Logic','parse_bosco.py',175),
  ('Expr -> Expr EQUALS Expr','Expr',3,'p_Expr_Logic','parse_bosco.py',176),
  ('Expr -> Expr NEQUALS Expr','Expr',3,'p_Expr_Logic','parse_bosco.py',177),
  ('Expr -> Expr AND Expr','Expr',3,'p_Expr_Logic','parse_bosco.py',178),
  ('Expr -> Expr OR Expr','Expr',3,'p_Expr_Logic','parse_bosco.py',179),
  ('Expr -> NOT Expr','Expr',2,'p_Expr_Logic','parse_bosco.py',180),
  ('Expr -> LValue ASSIGN Expr','Expr',3,'p_Expr','parse_bosco.py',183),
  ('Expr -> RPAREN Expr LPAREN','Expr',3,'p_Expr','parse_bosco.py',184),
  ('Expr -> FETCHINT MINUS BAR','Expr',3,'p_Expr','parse_bosco.py',185),
  ('Expr -> FETCHLINE MINUS BAR','Expr',3,'p_Expr','parse_bosco.py',186),
  ('Expr -> Constant','Expr',1,'p_Expr','parse_bosco.py',187),
  ('R_Expr -> Expr R_Expr','R_Expr',2,'p_R_Expr','parse_bosco.py',190),
  ('R_Expr -> COMMA Expr R_Expr','R_Expr',3,'p_R_Expr','parse_bosco.py',191),
  ('R_Expr -> Empty','R_Expr',1,'p_R_Expr','parse_bosco.py',192),
  ('LValue -> ID','LValue',1,'p_LValue','parse_bosco.py',195),
  ('Constant -> INT','Constant',1,'p_Constant','parse_bosco.py',198),
  ('Constant -> DOUBLE','Constant',1,'p_Constant','parse_bosco.py',199),
  ('Constant -> BOOL','Constant',1,'p_Constant','parse_bosco.py',200),
  ('Constant -> STRING','Constant',1,'p_Constant','parse_bosco.py',201),
  ('Constant -> NULL','Constant',1,'p_Constant','parse_bosco.py',202),
  ('Type -> INT','Type',1,'p_Type','parse_bosco.py',205),
  ('Type -> DOUBLE','Type',1,'p_Type','parse_bosco.py',206),
  ('Type -> BOOL','Type',1,'p_Type','parse_bosco.py',207),
  ('Type -> STRING','Type',1,'p_Type','parse_bosco.py',208),
  ('Type -> ID','Type',1,'p_Type','parse_bosco.py',209),
  ('Empty -> <empty>','Empty',0,'p_Empty','parse_bosco.py',212),
]
